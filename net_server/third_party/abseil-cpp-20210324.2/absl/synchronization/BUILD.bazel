load(
    "//:build_config.bzl",
    "absl_cc_library",
)

licenses(["notice"])

# Internal data structure for efficiently detecting mutex dependency cycles
absl_cc_library(
    name = "graphcycles_internal",
    srcs = [
        "internal/graphcycles.cc",
    ],
    hdrs = [
        "internal/graphcycles.h",
    ],
    visibility = [
        "//absl:__subpackages__",
    ],
    deps = [
        "//absl/base",
        "//absl/base:base_internal",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:malloc_internal",
        "//absl/base:raw_logging_internal",
    ],
)

absl_cc_library(
    name = "kernel_timeout_internal",
    hdrs = [
        "internal/kernel_timeout.h",
    ],
    visibility = [
        "//absl/synchronization:__pkg__",
    ],
    deps = [
        "//absl/base:core_headers",
        "//absl/base:raw_logging_internal",
        "//absl/time",
    ],
)

absl_cc_library(
    name = "synchronization",
    srcs = [
        "barrier.cc",
        "blocking_counter.cc",
        "internal/create_thread_identity.cc",
        "internal/per_thread_sem.cc",
        "internal/waiter.cc",
        "mutex.cc",
        "notification.cc",
    ],
    hdrs = [
        "barrier.h",
        "blocking_counter.h",
        "internal/create_thread_identity.h",
        "internal/futex.h",
        "internal/per_thread_sem.h",
        "internal/waiter.h",
        "mutex.h",
        "notification.h",
    ],
    deps = [
        ":graphcycles_internal",
        ":kernel_timeout_internal",
        "//absl/base",
        "//absl/base:atomic_hook",
        "//absl/base:base_internal",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:dynamic_annotations",
        "//absl/base:malloc_internal",
        "//absl/base:raw_logging_internal",
        "//absl/debugging:stacktrace",
        "//absl/debugging:symbolize",
        "//absl/time",
    ],
)
